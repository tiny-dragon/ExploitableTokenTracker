// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import excuteQuery from "@/lib/database";
import type { NextApiRequest, NextApiResponse } from "next";

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  try {
    if (req.method === "GET") {
      let queryRes = await excuteQuery({
        query: "SELECT * FROM chains WHERE name='binance-smart-chain'",
      });
      const binanceChainId = Array.isArray(queryRes) ? queryRes[0].id : -1;

      const page = parseInt(req.query.page?.toString() || "0");
      const rowsPerPage = parseInt(req.query.rowsPerPage?.toString() || "50");

      const tokens = await excuteQuery({
        query: `SELECT * FROM tokens WHERE chainId=? ORDER BY has1 DESC LIMIT ${
          page * rowsPerPage
        }, ${rowsPerPage}`,
        values: [binanceChainId],
      });

      queryRes = await excuteQuery({
        query: "SELECT COUNT(*) as count FROM tokens WHERE chainId=?",
        values: [binanceChainId],
      });
      const count = Array.isArray(queryRes) ? queryRes[0].count : 0;

      console.log(tokens, count);

      res.status(200).json({ tokens, count });
    } else if (req.method === "POST") {
      console.log(req.body.id, req.body.status);
      await excuteQuery({
        query: "UPDATE tokens SET has1=? WHERE id=?",
        values: [req.body.status, req.body.id],
      });

      res.status(200).json({ status: "success" });
    }
  } catch (e) {
    console.log(e);
    res.status(200).json({ tokens: [], count: 0 });
  }
}
